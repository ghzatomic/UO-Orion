// ==================================================
// Nome do Script:     				Lumber
// Criado por:         				Pedro Oliveira (GrimmJow)
// ================================================== 
// Versão:          		1.0 Version
// Data:			            08/04/2022
// Testado no:          	Ancorp Shard 
// ==================================================

function Autostart() {
    Orion.Wait(1500);
    Orion.CharPrint(self, 906, "Bom jogo!");
    Orion.Wait(100);
   //Lumber();
   Orion.Exec('Lumber', true);
    Orion.Wait(100);
}


var msgSuccess = 'em sua mochila';
var msgError = 'Nao ha madeiras|nao pode';
var msgWait = 'em sua mochila|Nao ha madeiras|nao pode|Nao ha nada|Voce nao conseguiu';
var tool = '0x0F43'; // Informe aqui o graphic do machado
var maxWeight = 150; // Informe aqui o peso max, quando chegar neste peso recala e guarda no banco
var maxSearchDistance=30;  // Max distancia que vai fazer a busca de arvores
var treeWorldLocations=createArr(200,200); // numero de array max, a quantidade de arvores 
var runaLumberPos=1; // posição da runa onde vai rodar lumber
var runaBankPos=1; // posicao da runa do banco
var containerBank=Orion.GetSerial('lumberbag'); // container do banco onde vai guardar os logs
var idRunebook='040116117';  // serial do runebook com a runa do banco e do local do lumber


function Lumber(ptreeWorldLocation)
{
  recall(false);
  var treeWorldLocation = ptreeWorldLocation == null ? FindTreesInArea() : ptreeWorldLocation;    
  for(c=0;c<treeWorldLocation.length;c++){
    Orion.ClearJournal();  
    Orion.WalkTo(treeWorldLocation[c][0],treeWorldLocation[c][1],0);
    Orion.Wait(1000);
    LumberAgain(treeWorldLocation[c][0],treeWorldLocation[c][1]);

    if (Player.Weight() >= maxWeight) 
    { 
      Orion.CharPrint(self, 906,  'Falta implementar para guardar no banco');  
      guardar();
    } else {
      while (Orion.InJournal(msgSuccess,0,0))
      {
        LumberAgain(treeWorldLocation[c][0],treeWorldLocation[c][1]);
      }         
    }
  }
  Lumber(treeWorldLocation);
}

function FindTreesInArea()
{ 
  var trueWorldLocCounter=0;
  
  for(c=(Player.X()-maxSearchDistance);c<(Player.X()+maxSearchDistance+1);c++){
    for(d=(Player.Y()-maxSearchDistance);d<(Player.Y()+maxSearchDistance+1);d++){
      if(Orion.ValidateTargetTile('tree', c, d)){
        treeWorldLocations[trueWorldLocCounter][0]=c;
        treeWorldLocations[trueWorldLocCounter][1]=d;
        trueWorldLocCounter++;
      } 
    }   
  }
  Orion.Print("Arvores encontrada e configurada, total: " + trueWorldLocCounter);
  treeWorldLocations.length=trueWorldLocCounter;
  return treeWorldLocations;
}

function createArr(x, y) {
  var arr = new Array(x);
  for (var c = 0; c < x; c++) {
    arr[c] = new Array(y);
  }
  return arr;
}

function LumberAgain(x,y)
{
  //Orion.Say('guards');
  Orion.ClearJournal();

  if (Orion.SkillValue('Lumberjacking') >= 1000) {
    Orion.UseType(tool, '0x09B5');
  } else {
    Orion.UseType(tool, '0x09B5');
  }

  Orion.WaitTargetTile('tree',x,y,0);
  Orion.WaitJournal(msgWait, Orion.Now(), (Orion.Now() + 14000), 'my|sys');
  if(Orion.InJournal(msgSuccess,0,0)) {
    LumberAgain(x,y);
  } else {
    return;  
  } 
}

function OpenBank(){
	Orion.SetTimer('openBank');
	Orion.ClearJournal();
    Orion.Say('Banker Bank');
	do {
		Orion.Wait(10);
	} while (!Orion.InJournal('Bank Box') && Orion.Timer('openBank') < 800 );

	var bag = Orion.GetSerial('lumberbag');
	Orion.OpenContainer(bag);
	Orion.Boxhack(Player.BankSerial());
    Orion.Boxhack(bag);
}

function recall(pBank){
    while(Player.Mana()<Player.MaxMana()){
        Orion.UseSkill('Meditation');
        Orion.WaitJournal('peace|Você perdeu', Orion.Now(), (Orion.Now()+2000));
    }

    if (pBank == true){
        Orion.Say('.recall ' + idRunebook + ',' + runaBankPos);       
    } else {
        Orion.Say('.recall ' + idRunebook + ',' + runaLumberPos);               
    }
    Orion.Wait(12000); 
}

function guardar(){
  recall(true);
  OpenBank()
  while (Orion.Count('0x1BDD', 'any', backpack)>= 1){
    var finditem = Orion.FindType('0x1BDD', 'any', backpack);
    for(i = 0; i < finditem.length; i++) {
        Orion.MoveItem(finditem[i], 0, containerBank);
        Orion.Wait(700);
    } 
    Orion.Wait(100);
  }
  recall(false);
}